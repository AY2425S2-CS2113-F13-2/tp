@startuml
'https://plantuml.com/sequence-diagram
hide footbox

box
participant "StartCommand" as StartCommand
participant "NormalMode" as NormalMode
participant "Ui" as Ui
participant "Scanner" as Scanner
participant "TypingAccuracy" as TypingAccuracy
participant "TypingTimer" as TypingTimer
participant "WordCounter" as WordCounter
participant "TypingTargetList" as TypingTargetList
participant "TypingTargets" as TypingTargets
participant "AutoAdjust" as AutoAdjust
participant "State" as State

StartCommand -> NormalMode : startNormalMode(testText)
activate NormalMode
NormalMode -> TypingAccuracy : setTestText(testText)
NormalMode -> Ui : showStartGame()
NormalMode -> TypingTimer : start()

loop for each line in testText
    NormalMode -> Ui : showString(s)
    NormalMode -> Scanner : nextLine()
    Scanner --> NormalMode : userInput
    NormalMode -> TypingAccuracy : updateUserInput(userInput)
    NormalMode -> WordCounter : countWords(userInput)
    WordCounter --> NormalMode : wordCount
    NormalMode -> NormalMode : update characterCount
end

NormalMode -> TypingTimer : stop()
NormalMode -> Ui : showResult()
NormalMode -> TypingTimer : getDurationMin()
TypingTimer --> NormalMode : duration

NormalMode -> Ui : showTypingSpeedWPM(typingSpeedWPM)
NormalMode -> Ui : showTypingSpeedCPM(typingSpeedCPM)
NormalMode -> Ui : showTypingScore(typingScore)

loop for each typingTarget in typingTargetList
    NormalMode -> TypingTarget : check target
    TypingTarget --> NormalMode : result
    NormalMode -> TypingTarget : printHit()
end

NormalMode -> TypingTargets : update(typingTargetList)
NormalMode -> AutoAdjust : evaluate(wordCount/duration)

alt updateHighScore succeeds
    NormalMode -> State : updateHighScore(typingAccuracy, typingSpeedWPM)
else IOException occurs
    NormalMode -> Ui : showErrorMessage(e.getMessage())
end

end box



@enduml
